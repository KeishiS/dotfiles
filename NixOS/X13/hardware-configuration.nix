# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    kernelModules = [
      "kvm-amd"
      "v4l2loopback"
    ];
    extraModulePackages = with config.boot.kernelPackages; [
      v4l2loopback
    ];
    extraModprobeConfig = ''
      options v4l2loopback devices=1 video_nr=1 card_label="OBS Cam" exclusive_caps=1
    '';

    initrd = {
      availableKernelModules = [
        "nvme"
        "xhci_pci"
        "thunderbolt"
        "usb_storage"
        "sd_mod"
      ];
      kernelModules = [
        "dm_snapshot"
        "vfat"
        "nls_cp437"
        "nls_iso8859-1"
        "usbhid"
        "amdgpu"
      ];

      services.lvm.enable = true;
      luks.yubikeySupport = true;
      luks.devices."root" = {
        device = "/dev/disk/by-uuid/48d902f0-a799-4689-9610-3b19579fc229";
        preLVM = false;
        yubikey = {
          slot = 1;
          twoFactor = true;
          gracePeriod = 30;
          keyLength = 64;
          saltLength = 16;
          storage = {
            device = "/dev/nvme0n1p1";
            fsType = "vfat";
            path = "/crypt-storage/default";
          };
        };
      };
    };
  };

  services.xserver = {
    enable = true;
    videoDrivers = [ "amdgpu" ];
  };
  environment.systemPackages = with pkgs; [
    rocmPackages.rocminfo
  ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/4a0307b0-2c4e-46d1-af0b-076270deb052";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/A809-A50F";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  swapDevices = [
    {
      device = "/dev/disk/by-uuid/a14141fa-f466-4618-a51f-b9abee138cb0";
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.interfaces.enp51s0f4u2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
